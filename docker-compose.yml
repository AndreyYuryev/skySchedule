version: '3.9'

services:
  redis2:
    image: redis
    container_name: redis2
    ports:
      - '6379:6379'

  postgres2:
    image: postgres
    restart: always
    container_name: postgres2
    env_file:
      - .env.docker
    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/pgdata
    volumes:
      - pgdata2:/var/lib/postgresql/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app2:
    build: .
    container_name: app2
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    depends_on:
      postgres2:
        condition: service_healthy
    env_file:
      - .env.docker
    volumes:
      - .:/code

  celery_worker2:
    build: .
    container_name: celery_worker2
    tty: true
    command: celery -A config worker -l INFO -P eventlet
    env_file:
      - .env.docker
    depends_on:
      - redis2
      - app2
      - postgres2

  celery_beat2:
    build: .
    container_name: celery_beat2
    tty: true
    command: celery -A config beat -l INFO
    env_file:
      - .env.docker
    depends_on:
      - redis2
      - app2
      - postgres2

volumes:
  pgdata2: